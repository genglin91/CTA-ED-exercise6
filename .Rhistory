knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
url <- "https://www.ssa.gov/oact/babynames/numberUSbirths.html"
# Storing the url's HTML code
html_content <- read_html(url)
# Not very informative
str(html_content)
print(html_content)
html_content
# Looking at first 1000 characters
substr(html_content, 1, 1000)
# Extracting tables in the document
tab <- html_table(html_content, fill = TRUE)
# Check object
str(tab)
tab
# Save the dataframe (tibble)
social_security_data <- tab[[1]]
social_security_data <- as_tibble(social_security_data)
social_security_data
tab
tab <- html_table(html_content, fill = TRUE)
# Check object
str(tab)
# Website only had one table -> list of length 1 containing the dataframe
# Save the dataframe (tibble)
social_security_data <- tab[[1]]
social_security_data <- as_tibble(social_security_data)
social_security_data
social_security_data
tab
## Remove commas and then make variable numeric
social_security_data$Male <-  as.numeric(gsub(",", "", social_security_data$Male))
social_security_data$Female <- as.numeric(gsub(",", "", social_security_data$Female))
social_security_data$Total <- as.numeric(gsub(",", "", social_security_data$Total))
## Rename variables
colnames(social_security_data) <- c('year', 'male', 'female', 'total')
social_security_data
# Pivot longer function
social_security_data_long <- pivot_longer(data = social_security_data[, 1:3],
cols = c("male", "female"), names_to = "sex", values_to = "individuals")
# Creating the plot
ggplot(social_security_data_long) +
aes(x = year, y = individuals, group = sex, colour = sex) +
geom_line() + xlab("Year") + ylab("Individuals") +
scale_colour_manual(name ="Birth Sex", values = c(1, 2), labels = c("Female", "Male"))
url <- "https://en.wikipedia.org/wiki/List_of_United_States_cities_by_population"
html <- read_html(url)
tables <- html_table(html, fill=TRUE)
class(tables)
length(tables)
print(tables)
tables[3] # position 3 happens to be the correct table (checked 12/03/2024)
table_raw <- html_elements(html, css = 'tba')
length(table_raw) # now a list of length 1
data_pop <- html_table(table_raw[[1]], fill = TRUE)
tables[3] # position 3 happens to be the correct table (checked 12/03/2024)
table_raw <- html_elements(html, css = 'tba')
length(table_raw) # now a list of length 1
data_pop <- html_table(table_raw[[1]], fill = TRUE)
social_security_data_long
